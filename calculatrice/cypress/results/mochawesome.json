{
  "stats": {
    "suites": 1,
    "tests": 9,
    "passes": 9,
    "pending": 0,
    "failures": 0,
    "start": "2020-10-04T17:02:33.634Z",
    "end": "2020-10-04T17:03:10.617Z",
    "duration": 36983,
    "testsRegistered": 9,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "c9c41e01-bf10-4e32-895c-8f6dafd783ce",
      "title": "",
      "fullFile": "cypress\\integration\\calculatrice\\calculator.spec.js",
      "file": "cypress\\integration\\calculatrice\\calculator.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "84dc0ac9-692d-4d1d-933f-f976428478b2",
          "title": "Use calculator",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Calculator diplay contain 0",
              "fullTitle": "Use calculator Calculator diplay contain 0",
              "timedOut": null,
              "duration": 2183,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.component-display > div').should('contain', 0);",
              "err": {},
              "uuid": "7bbd2a2e-bfce-4c41-a4fd-f0427c90f651",
              "parentUUID": "84dc0ac9-692d-4d1d-933f-f976428478b2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "number key of a calculator ",
              "fullTitle": "Use calculator number key of a calculator ",
              "timedOut": null,
              "duration": 1566,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//execution sans jeu de données\n//cy.numberKey(0, 1, 2, 3, 4, 5, 6, 7, 8, 9)\n//execution avec jeu de données\ncy.numberKey(operator.zero, operator.un, operator.deux, operator.trois, operator.quatre, operator.cinq, operator.six, operator.sept, operator.huit, operator.neuf);",
              "err": {},
              "uuid": "9b7efeaa-ab7e-483f-8ac4-b006a4aadcd1",
              "parentUUID": "84dc0ac9-692d-4d1d-933f-f976428478b2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Initialize numbers",
              "fullTitle": "Use calculator Initialize numbers",
              "timedOut": null,
              "duration": 231,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.initialDisplay(0);",
              "err": {},
              "uuid": "7030fe71-b8ab-49fd-95af-40f82e5b4af0",
              "parentUUID": "84dc0ac9-692d-4d1d-933f-f976428478b2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Calculation operators",
              "fullTitle": "Use calculator Calculation operators",
              "timedOut": null,
              "duration": 1315,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//execution sans jeu de données\n// cy.operators(\"+/-\", \"%\", \".\", \"AC\", \"x\", \"-\", \"+\", \"=\", \"÷\" )\n//execution avec jeu de données\ncy.operators(operator.sign, operator.percent, operator.comma, operator.clear, operator.multiplication, operator.substraction, operator.addition, operator.equal, operator.division);",
              "err": {},
              "uuid": "3937f39c-2503-4b39-baae-bdc0c92e15d5",
              "parentUUID": "84dc0ac9-692d-4d1d-933f-f976428478b2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Addition Operation",
              "fullTitle": "Use calculator Addition Operation",
              "timedOut": null,
              "duration": 3656,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//simple addition \ncy.simpleAdditionCas1(operator.clear, operator.sept, operator.addition, operator.trois, operator.equal, operator.dix); // simple addition of 0\ncy.simpleAdditionCas2(operator.clear, operator.un, operator.neuf, operator.addition, operator.zero, operator.equal, operator.dix_neuf); //simple addition of a negative number\ncy.simpleAdditionCas3(operator.clear, operator.neuf, operator.sign, operator.addition, operator.cinq, operator.equal, operator.neg_quatre); //simple addition of  decimal number\ncy.simpleAdditionCas4(operator.clear, operator.un, operator.deux, operator.comma, operator.trois, operator.addition, operator.huit, operator.cinq, operator.equal, operator.vingt_chuit);",
              "err": {},
              "uuid": "55cb7c9b-0aa9-4f8a-be45-17f76455c405",
              "parentUUID": "84dc0ac9-692d-4d1d-933f-f976428478b2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "subtraction Operation",
              "fullTitle": "Use calculator subtraction Operation",
              "timedOut": null,
              "duration": 4386,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//simple substraction\ncy.substractionCas1(operator.clear, operator.neuf, operator.sept, operator.substraction, operator.trois, operator.cinq, operator.equal, operator.soixante_deux); // simple substraction of 0\ncy.substractionCas2(operator.clear, operator.un, operator.neuf, operator.substraction, operator.zero, operator.equal, operator.dix_neuf); //simple substraction of a negative number\ncy.substractionCas3(operator.clear, operator.trois, operator.neuf, operator.sign, operator.substraction, operator.cinq, operator.zero, operator.equal, operator.cquatre_vingt_neuf);\ncy.substractionCas4(operator.clear, operator.trois, operator.neuf, operator.sign, operator.substraction, operator.cinq, operator.zero, operator.sign, operator.equal, operator.trente_un); //simple substraction of  decimal number\ncy.substractionCas5(operator.clear, operator.un, operator.deux, operator.comma, operator.trois, operator.substraction, operator.huit, operator.comma, operator.cinq, operator.equal, operator.trois_c_huit);",
              "err": {},
              "uuid": "8068e5b8-3fef-4e45-86f4-fef94c46e748",
              "parentUUID": "84dc0ac9-692d-4d1d-933f-f976428478b2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Division operation",
              "fullTitle": "Use calculator Division operation",
              "timedOut": null,
              "duration": 5415,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//simple division\ncy.divisionCas1(operator.clear, operator.cinq, operator.neuf, operator.division, operator.sept, operator.cinq, operator.equal, operator.huit_c_quarenteDeux); // simple division by 0\ncy.divisionCas2(operator.clear, operator.zero, operator.division, operator.un, operator.neuf, operator.equal, operator.zero); //simple division  of a negative number\ncy.divisionCas3(operator.clear, operator.trois, operator.zero, operator.sign, operator.division, operator.un, operator.zero, operator.equal, operator.neg_trois); // simple division  between two negatives numbers\ncy.divisionCas4(operator.clear, operator.un, operator.neuf, operator.zero, operator.sign, operator.division, operator.cinq, operator.sign, operator.equal, operator.trente_huit); // simple division with  negative denominator number\ncy.divisionCas5(operator.clear, operator.neuf, operator.zero, operator.division, operator.neuf, operator.sign, operator.equal, operator.neg_dix); //simple division  by  decimal number\ncy.divisionCas6(operator.clear, operator.trois, operator.deux, operator.division, operator.huit, operator.comma, operator.cinq, operator.equal, operator.trois_c_septSix); // division by 0,...\ncy.divisionCas7(operator.clear, operator.trois, operator.zero, operator.division, operator.zero, operator.comma, operator.cinq, operator.equal, operator.soixante);",
              "err": {},
              "uuid": "76cb8349-3419-480d-a35f-3eacbe8610f4",
              "parentUUID": "84dc0ac9-692d-4d1d-933f-f976428478b2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Multiplication operation",
              "fullTitle": "Use calculator Multiplication operation",
              "timedOut": null,
              "duration": 5174,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//simple Multiplication\ncy.multiplicationCas1(operator.clear, operator.neuf, operator.multiplication, operator.sept, operator.equal, operator.soixante_trois); // simple Multiplication by 0\ncy.multiplicationCas2(operator.clear, operator.zero, operator.multiplication, operator.un, operator.neuf, operator.equal, operator.zero); //simple Multiplication  of negative number\ncy.multiplicationCas3(operator.clear, operator.trois, operator.zero, operator.multiplication, operator.un, operator.cinq, operator.sign, operator.equal, operator.neg_qutre_cinq_zero); // simple Multiplication between two negatives numbers\ncy.multiplicationCas4(operator.clear, operator.un, operator.zero, operator.sign, operator.multiplication, operator.cinq, operator.sign, operator.equal, operator.cinquante); // simple Multiplication between  negative and positive number \ncy.multiplicationCas5(operator.clear, operator.neuf, operator.zero, operator.multiplication, operator.neuf, operator.sign, operator.equal, operator.neg_huit_cent_dix); //simple Multiplication  of  decimal number\ncy.multiplicationCas5(operator.clear, operator.trois, operator.deux, operator.comma, operator.quatre, operator.multiplication, operator.huit, operator.comma, operator.cinq, operator.equal, operator.deuxcent_sept_cinq_cquatre); // Multiplication by 0,...\ncy.multiplicationCas6(operator.clear, operator.trois, operator.zero, operator.comma, operator.cinq, operator.multiplication, operator.zero, operator.comma, operator.un, operator.equal, operator.trois_c_cinq);",
              "err": {},
              "uuid": "683e121e-7fa1-490f-8a26-689e5fd466fa",
              "parentUUID": "84dc0ac9-692d-4d1d-933f-f976428478b2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Percentage",
              "fullTitle": "Use calculator Percentage",
              "timedOut": null,
              "duration": 475,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.percentage(operator.clear, operator.trois, operator.zero, operator.percent, operator.equal, operator.zero_c_trois);",
              "err": {},
              "uuid": "bddfceff-0220-4862-87e3-2c45e0739778",
              "parentUUID": "84dc0ac9-692d-4d1d-933f-f976428478b2",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "7bbd2a2e-bfce-4c41-a4fd-f0427c90f651",
            "9b7efeaa-ab7e-483f-8ac4-b006a4aadcd1",
            "7030fe71-b8ab-49fd-95af-40f82e5b4af0",
            "3937f39c-2503-4b39-baae-bdc0c92e15d5",
            "55cb7c9b-0aa9-4f8a-be45-17f76455c405",
            "8068e5b8-3fef-4e45-86f4-fef94c46e748",
            "76cb8349-3419-480d-a35f-3eacbe8610f4",
            "683e121e-7fa1-490f-8a26-689e5fd466fa",
            "bddfceff-0220-4862-87e3-2c45e0739778"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 24401,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "6.1.1"
    },
    "marge": {
      "options": {
        "reportDir": "cypress/results",
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "5.1.0"
    }
  }
}